/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.airport.view;

import com.airport.controller.algorithms.BinarySearch;
import com.airport.controller.algorithms.InsertionSort;
import com.airport.controller.algorithms.MergeSort;
import com.airport.controller.algorithms.SelectionSort;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import com.airport.model.SkylinkerModel;
import com.airport.util.ValidationUtil;

/**
 *
 * @author Sambridhi Shrestha 
 * LMU ID: 23048681
 */
public class AirportInformationSystem extends javax.swing.JFrame {

    private java.awt.CardLayout cardLayout;
    private ArrayList<SkylinkerModel> schedule;

    public AirportInformationSystem() {
        initComponents();
        initializeLayout();
        initializeData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        infoPanel = new javax.swing.JPanel();
        Leftpanel = new javax.swing.JPanel();
        FlightDetailButton = new javax.swing.JButton();
        AdminButton = new javax.swing.JButton();
        AboutButton = new javax.swing.JButton();
        ContactButton = new javax.swing.JButton();
        HomeButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTabbedp = new javax.swing.JTabbedPane();
        MainFlightPanel = new javax.swing.JPanel();
        Flightscrollpane = new javax.swing.JScrollPane();
        Flighttable = new javax.swing.JTable();
        TopPanel = new javax.swing.JPanel();
        FlightLable = new javax.swing.JLabel();
        SearchTxt = new javax.swing.JTextField();
        SortCombobox = new javax.swing.JComboBox<>();
        searchIcon = new javax.swing.JLabel();
        AdminPnl = new javax.swing.JPanel();
        AdminControl = new javax.swing.JPanel();
        SchedulePanel = new javax.swing.JPanel();
        JlableArival = new javax.swing.JLabel();
        JlableSector = new javax.swing.JLabel();
        JlableDeparture = new javax.swing.JLabel();
        JlableFlight = new javax.swing.JLabel();
        JlableOperation = new javax.swing.JLabel();
        txtOperation = new javax.swing.JTextField();
        txtSector = new javax.swing.JTextField();
        txtDeparture = new javax.swing.JTextField();
        txtFlight = new javax.swing.JTextField();
        txtArival = new javax.swing.JTextField();
        TopTxt = new javax.swing.JLabel();
        Addbutton = new javax.swing.JButton();
        Deletebutton = new javax.swing.JButton();
        Updatebutton = new javax.swing.JButton();
        PicLabel = new javax.swing.JLabel();
        AboutUsPanel = new javax.swing.JPanel();
        AboutusLabel = new javax.swing.JLabel();
        AirbusPanel = new javax.swing.JPanel();
        airbuslabel = new javax.swing.JLabel();
        airbus2 = new javax.swing.JLabel();
        airbus3 = new javax.swing.JLabel();
        airbus4 = new javax.swing.JLabel();
        airbus5 = new javax.swing.JLabel();
        airbus6 = new javax.swing.JLabel();
        AirbusPiclabel = new javax.swing.JLabel();
        BoeingPanel = new javax.swing.JPanel();
        BoeingPicLable = new javax.swing.JLabel();
        Boeing1 = new javax.swing.JLabel();
        Boeing2 = new javax.swing.JLabel();
        Boeing3 = new javax.swing.JLabel();
        Boeing4 = new javax.swing.JLabel();
        Boeing5 = new javax.swing.JLabel();
        ContactUsPanel = new javax.swing.JPanel();
        HeadOfficePanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        Contact1 = new javax.swing.JLabel();
        Contact2 = new javax.swing.JLabel();
        Contact3 = new javax.swing.JLabel();
        Contact4 = new javax.swing.JLabel();
        Contact5 = new javax.swing.JLabel();
        Contact6 = new javax.swing.JLabel();
        Contact7 = new javax.swing.JLabel();
        Contact8 = new javax.swing.JLabel();
        Contact9 = new javax.swing.JLabel();
        Contact10 = new javax.swing.JLabel();
        HomePanel = new javax.swing.JPanel();
        Home1 = new javax.swing.JLabel();
        Home2 = new javax.swing.JLabel();
        Home3 = new javax.swing.JLabel();
        Home4 = new javax.swing.JLabel();
        Logoutbutton = new javax.swing.JButton();
        CopyRightLabel = new javax.swing.JLabel();
        LoginPanel = new javax.swing.JPanel();
        BLogin = new javax.swing.JButton();
        Jpassword = new javax.swing.JPasswordField();
        LPassword = new javax.swing.JLabel();
        UserTxtF = new javax.swing.JTextField();
        Lusername = new javax.swing.JLabel();
        LableLogin = new javax.swing.JLabel();
        CshowPassword = new javax.swing.JCheckBox();
        LAirplane = new javax.swing.JLabel();
        Lmain = new javax.swing.JLabel();
        LErrormsg = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        infoPanel.setBackground(new java.awt.Color(237, 245, 255));
        infoPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        infoPanel.setPreferredSize(new java.awt.Dimension(800, 530));
        infoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Leftpanel.setBackground(new java.awt.Color(54, 77, 91));

        FlightDetailButton.setBackground(new java.awt.Color(34, 56, 73));
        FlightDetailButton.setFont(new java.awt.Font("Playfair Display", 0, 14)); // NOI18N
        FlightDetailButton.setForeground(new java.awt.Color(246, 194, 122));
        FlightDetailButton.setText(" Flight Details");
        FlightDetailButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        FlightDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FlightDetailButtonActionPerformed(evt);
            }
        });

        AdminButton.setBackground(new java.awt.Color(34, 56, 73));
        AdminButton.setFont(new java.awt.Font("Playfair Display", 0, 14)); // NOI18N
        AdminButton.setForeground(new java.awt.Color(246, 194, 122));
        AdminButton.setText("Admin Control");
        AdminButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        AdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminButtonActionPerformed(evt);
            }
        });

        AboutButton.setBackground(new java.awt.Color(34, 56, 73));
        AboutButton.setFont(new java.awt.Font("Playfair Display", 0, 14)); // NOI18N
        AboutButton.setForeground(new java.awt.Color(246, 194, 122));
        AboutButton.setText("About Us");
        AboutButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        AboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutButtonActionPerformed(evt);
            }
        });

        ContactButton.setBackground(new java.awt.Color(34, 56, 73));
        ContactButton.setFont(new java.awt.Font("Playfair Display", 0, 14)); // NOI18N
        ContactButton.setForeground(new java.awt.Color(246, 194, 122));
        ContactButton.setText("Contact Us");
        ContactButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        ContactButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContactButtonActionPerformed(evt);
            }
        });

        HomeButton.setBackground(new java.awt.Color(34, 56, 73));
        HomeButton.setFont(new java.awt.Font("Playfair Display", 0, 14)); // NOI18N
        HomeButton.setForeground(new java.awt.Color(246, 194, 122));
        HomeButton.setText("Home");
        HomeButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        HomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeButtonActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/airport/resource/final logo.png"))); // NOI18N

        javax.swing.GroupLayout LeftpanelLayout = new javax.swing.GroupLayout(Leftpanel);
        Leftpanel.setLayout(LeftpanelLayout);
        LeftpanelLayout.setHorizontalGroup(
            LeftpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftpanelLayout.createSequentialGroup()
                .addGroup(LeftpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LeftpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(AboutButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AdminButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(FlightDetailButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(HomeButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addComponent(ContactButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(LeftpanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        LeftpanelLayout.setVerticalGroup(
            LeftpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftpanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(HomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(FlightDetailButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(AdminButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(AboutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(ContactButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        infoPanel.add(Leftpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 540));

        jTabbedp.setBackground(new java.awt.Color(54, 77, 91));
        jTabbedp.setForeground(new java.awt.Color(54, 77, 91));

        MainFlightPanel.setBackground(new java.awt.Color(237, 245, 255));

        Flightscrollpane.setBackground(new java.awt.Color(255, 255, 255));
        Flightscrollpane.setForeground(new java.awt.Color(237, 245, 255));

        Flighttable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(54, 77, 91), 2, true));
        Flighttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight No", "Sector", "Departure", "Arival", "Operation Day"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Flightscrollpane.setViewportView(Flighttable);
        if (Flighttable.getColumnModel().getColumnCount() > 0) {
            Flighttable.getColumnModel().getColumn(0).setResizable(false);
            Flighttable.getColumnModel().getColumn(1).setResizable(false);
            Flighttable.getColumnModel().getColumn(2).setResizable(false);
            Flighttable.getColumnModel().getColumn(3).setResizable(false);
            Flighttable.getColumnModel().getColumn(4).setResizable(false);
        }

        TopPanel.setBackground(new java.awt.Color(34, 56, 73));

        FlightLable.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        FlightLable.setForeground(new java.awt.Color(246, 194, 122));
        FlightLable.setText("Flight Details Dashboard");

        javax.swing.GroupLayout TopPanelLayout = new javax.swing.GroupLayout(TopPanel);
        TopPanel.setLayout(TopPanelLayout);
        TopPanelLayout.setHorizontalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(FlightLable, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(365, Short.MAX_VALUE))
        );
        TopPanelLayout.setVerticalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(FlightLable, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        SearchTxt.setBackground(new java.awt.Color(245, 195, 116));
        SearchTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        SortCombobox.setBackground(new java.awt.Color(245, 195, 116));
        SortCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort By", "Sector(A-Z)", "Sector(Z-A)", "Operation Day(A-Z)", "Operation Day(Z-A)", "Flight No from ascending", "Flight No from descending", " ", " " }));
        SortCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortComboboxActionPerformed(evt);
            }
        });

        searchIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/airport/resource/search1.png"))); // NOI18N
        searchIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchIconMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout MainFlightPanelLayout = new javax.swing.GroupLayout(MainFlightPanel);
        MainFlightPanel.setLayout(MainFlightPanelLayout);
        MainFlightPanelLayout.setHorizontalGroup(
            MainFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainFlightPanelLayout.createSequentialGroup()
                .addGroup(MainFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TopPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MainFlightPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(MainFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(MainFlightPanelLayout.createSequentialGroup()
                                .addComponent(SortCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchIcon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Flightscrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MainFlightPanelLayout.setVerticalGroup(
            MainFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainFlightPanelLayout.createSequentialGroup()
                .addComponent(TopPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SortCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Flightscrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedp.addTab("", MainFlightPanel);

        AdminPnl.setBackground(new java.awt.Color(237, 245, 255));

        AdminControl.setBackground(new java.awt.Color(51, 255, 51));
        AdminControl.setPreferredSize(new java.awt.Dimension(689, 546));
        AdminControl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SchedulePanel.setBackground(new java.awt.Color(237, 245, 255));

        JlableArival.setFont(new java.awt.Font("Garamond", 1, 14)); // NOI18N
        JlableArival.setText("Arival");

        JlableSector.setFont(new java.awt.Font("Garamond", 1, 14)); // NOI18N
        JlableSector.setText("Sector");

        JlableDeparture.setFont(new java.awt.Font("Garamond", 1, 14)); // NOI18N
        JlableDeparture.setText("Departure");

        JlableFlight.setFont(new java.awt.Font("Garamond", 1, 14)); // NOI18N
        JlableFlight.setText("Flight No");

        JlableOperation.setFont(new java.awt.Font("Garamond", 1, 14)); // NOI18N
        JlableOperation.setText("Operation Day");

        txtOperation.setBackground(new java.awt.Color(249, 249, 249));
        txtOperation.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtSector.setBackground(new java.awt.Color(249, 249, 249));
        txtSector.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtDeparture.setBackground(new java.awt.Color(249, 249, 249));
        txtDeparture.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtFlight.setBackground(new java.awt.Color(249, 249, 249));
        txtFlight.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtArival.setBackground(new java.awt.Color(249, 249, 249));
        txtArival.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        TopTxt.setFont(new java.awt.Font("Serif", 0, 24)); // NOI18N
        TopTxt.setForeground(new java.awt.Color(54, 77, 91));
        TopTxt.setText("Skylinker Scheduler");

        Addbutton.setBackground(new java.awt.Color(204, 204, 204));
        Addbutton.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        Addbutton.setText("ADD");
        Addbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddbuttonActionPerformed(evt);
            }
        });

        Deletebutton.setBackground(new java.awt.Color(204, 204, 204));
        Deletebutton.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        Deletebutton.setText("DELETE");
        Deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletebuttonActionPerformed(evt);
            }
        });

        Updatebutton.setBackground(new java.awt.Color(204, 204, 204));
        Updatebutton.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        Updatebutton.setText("UPDATE");
        Updatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatebuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SchedulePanelLayout = new javax.swing.GroupLayout(SchedulePanel);
        SchedulePanel.setLayout(SchedulePanelLayout);
        SchedulePanelLayout.setHorizontalGroup(
            SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SchedulePanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SchedulePanelLayout.createSequentialGroup()
                        .addGroup(SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JlableFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOperation, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JlableOperation, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtSector, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JlableSector, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(SchedulePanelLayout.createSequentialGroup()
                                    .addComponent(Addbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Updatebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(38, 38, 38)
                                    .addComponent(Deletebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(SchedulePanelLayout.createSequentialGroup()
                                    .addGroup(SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(JlableDeparture))
                                    .addGap(44, 44, 44)
                                    .addGroup(SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(JlableArival, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtArival, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(12, 14, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SchedulePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TopTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
        );
        SchedulePanelLayout.setVerticalGroup(
            SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SchedulePanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(TopTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JlableFlight)
                    .addComponent(JlableOperation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtOperation, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(JlableSector)
                .addGroup(SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SchedulePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSector, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SchedulePanelLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(JlableDeparture)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(SchedulePanelLayout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(JlableArival)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtArival, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 105, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SchedulePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(SchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Updatebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Deletebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Addbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))))
        );

        AdminControl.add(SchedulePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        PicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/airport/resource/image back.png"))); // NOI18N
        AdminControl.add(PicLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 460));

        javax.swing.GroupLayout AdminPnlLayout = new javax.swing.GroupLayout(AdminPnl);
        AdminPnl.setLayout(AdminPnlLayout);
        AdminPnlLayout.setHorizontalGroup(
            AdminPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminPnlLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(AdminControl, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
                .addContainerGap())
        );
        AdminPnlLayout.setVerticalGroup(
            AdminPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminPnlLayout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(AdminControl, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jTabbedp.addTab("", AdminPnl);

        AboutUsPanel.setBackground(new java.awt.Color(237, 245, 255));
        AboutUsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AboutusLabel.setBackground(new java.awt.Color(54, 77, 91));
        AboutusLabel.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        AboutusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AboutusLabel.setText("Aircraft Profile at Skylinker Airlines");
        AboutUsPanel.add(AboutusLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 640, 70));

        AirbusPanel.setBackground(new java.awt.Color(54, 77, 91));

        airbuslabel.setForeground(new java.awt.Color(246, 194, 122));
        airbuslabel.setText("The Airbus A320 is a cornerstone of Skylinker Airlines ");

        airbus2.setForeground(new java.awt.Color(246, 194, 122));
        airbus2.setText("company known for its efficiency, trustworthiness, and ");

        airbus3.setForeground(new java.awt.Color(246, 194, 122));
        airbus3.setText("comfort. The A320 is designed for both short and ");

        airbus4.setForeground(new java.awt.Color(246, 194, 122));
        airbus4.setText("medium flights, combining innovative technology with ");

        airbus5.setForeground(new java.awt.Color(246, 194, 122));
        airbus5.setText("greater efficiency of fuel to ensure our customer's ");

        airbus6.setForeground(new java.awt.Color(246, 194, 122));
        airbus6.setText("safety and satisfaction.");

        AirbusPiclabel.setForeground(new java.awt.Color(246, 194, 122));
        AirbusPiclabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/airport/resource/airbus 4.jpg"))); // NOI18N
        AirbusPiclabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(246, 194, 122), 2, true));

        javax.swing.GroupLayout AirbusPanelLayout = new javax.swing.GroupLayout(AirbusPanel);
        AirbusPanel.setLayout(AirbusPanelLayout);
        AirbusPanelLayout.setHorizontalGroup(
            AirbusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AirbusPanelLayout.createSequentialGroup()
                .addGroup(AirbusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AirbusPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(AirbusPiclabel, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AirbusPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(AirbusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(airbus4)
                            .addComponent(airbuslabel)
                            .addComponent(airbus3)
                            .addComponent(airbus5)
                            .addComponent(airbus6)
                            .addComponent(airbus2))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AirbusPanelLayout.setVerticalGroup(
            AirbusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AirbusPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(AirbusPiclabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(airbuslabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(airbus2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(airbus3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(airbus4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(airbus5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(airbus6)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        AboutUsPanel.add(AirbusPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 115, -1, 350));

        BoeingPanel.setBackground(new java.awt.Color(54, 77, 91));

        BoeingPicLable.setForeground(new java.awt.Color(246, 194, 122));
        BoeingPicLable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/airport/resource/boeing 747.png"))); // NOI18N
        BoeingPicLable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(246, 194, 122), 2, true));

        Boeing1.setForeground(new java.awt.Color(246, 194, 122));
        Boeing1.setText("The Boeing 747 is Skylinker Airlines premier aircraft ");

        Boeing2.setForeground(new java.awt.Color(246, 194, 122));
        Boeing2.setText("known for its iconic look, quality, and remarkable ");

        Boeing3.setForeground(new java.awt.Color(246, 194, 122));
        Boeing3.setText("performance. The 747 is also known as the  \"Queen of ");

        Boeing4.setForeground(new java.awt.Color(246, 194, 122));
        Boeing4.setText("the Skies\" designed for long-range flights and provides");

        Boeing5.setForeground(new java.awt.Color(246, 194, 122));
        Boeing5.setText("luxury and comfort.");

        javax.swing.GroupLayout BoeingPanelLayout = new javax.swing.GroupLayout(BoeingPanel);
        BoeingPanel.setLayout(BoeingPanelLayout);
        BoeingPanelLayout.setHorizontalGroup(
            BoeingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BoeingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BoeingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Boeing1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Boeing2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Boeing3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Boeing4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                    .addComponent(Boeing5, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(BoeingPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(BoeingPicLable)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BoeingPanelLayout.setVerticalGroup(
            BoeingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BoeingPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(BoeingPicLable, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Boeing1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Boeing2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Boeing3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Boeing4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Boeing5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        AboutUsPanel.add(BoeingPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 115, -1, 350));

        jTabbedp.addTab("", AboutUsPanel);

        ContactUsPanel.setBackground(new java.awt.Color(237, 245, 255));
        ContactUsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        HeadOfficePanel.setBackground(new java.awt.Color(54, 77, 91));

        jLabel6.setBackground(new java.awt.Color(246, 194, 122));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(246, 194, 122));
        jLabel6.setText("Skylinker Head Office ");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(237, 245, 255));
        jLabel11.setText("Skylinker Airlines Building,");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(237, 245, 255));
        jLabel12.setText("Balaju, Kathmandu");

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(237, 245, 255));
        jLabel28.setText("Tel No: 5793845, 5708291, 4291759");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(237, 245, 255));
        jLabel29.setText("Fax : +977-01-5766321");

        javax.swing.GroupLayout HeadOfficePanelLayout = new javax.swing.GroupLayout(HeadOfficePanel);
        HeadOfficePanel.setLayout(HeadOfficePanelLayout);
        HeadOfficePanelLayout.setHorizontalGroup(
            HeadOfficePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeadOfficePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HeadOfficePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HeadOfficePanelLayout.setVerticalGroup(
            HeadOfficePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeadOfficePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        ContactUsPanel.add(HeadOfficePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 59, 250, 170));

        Contact1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        Contact1.setText("Miss Sambridhi Shrestha");
        ContactUsPanel.add(Contact1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, 37));

        Contact2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Contact2.setText("Email : skylinker@nac.com.np");
        ContactUsPanel.add(Contact2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 90, 221, 20));

        Contact3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Contact3.setText("Hunting Line : +977-1-4286570");
        ContactUsPanel.add(Contact3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 120, 221, -1));

        Contact4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Contact4.setText("Int’l Reservation:+977 1 5718542");
        ContactUsPanel.add(Contact4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 150, 221, -1));

        Contact5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Contact5.setText("Domestic Reservation : +977-1-0230370");
        ContactUsPanel.add(Contact5, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 180, -1, -1));

        Contact6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Contact6.setText("Online Ticket Reservation: linker@nac.com.np");
        ContactUsPanel.add(Contact6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 210, -1, -1));

        Contact7.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Contact7.setText("Contact Details");
        ContactUsPanel.add(Contact7, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, -1, 37));

        Contact8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Contact8.setText("Email : sambridhishrestha9@gmail.com");
        ContactUsPanel.add(Contact8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));

        Contact9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Contact9.setText("Director of Skylinker");
        ContactUsPanel.add(Contact9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 221, -1));

        Contact10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Contact10.setText("Contact : 9803398386");
        ContactUsPanel.add(Contact10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 221, -1));

        jTabbedp.addTab("", ContactUsPanel);

        HomePanel.setBackground(new java.awt.Color(34, 56, 73));
        HomePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Home1.setFont(new java.awt.Font("Times New Roman", 1, 44)); // NOI18N
        Home1.setText("Turning Miles ");
        HomePanel.add(Home1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 320, -1));

        Home2.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        Home2.setText("Into Smiles");
        HomePanel.add(Home2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        Home3.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        Home3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Home3.setText("Skylinker National Flights: Exclusively Serving You with Excellence for 25 Years.");
        Home3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        HomePanel.add(Home3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 600, -1));

        Home4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/airport/resource/home 3.png"))); // NOI18N
        HomePanel.add(Home4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 600, 440));

        jTabbedp.addTab("", HomePanel);

        infoPanel.add(jTabbedp, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, -40, 640, 530));

        Logoutbutton.setBackground(new java.awt.Color(245, 195, 116));
        Logoutbutton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Logoutbutton.setText("LOGOUT");
        Logoutbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutbuttonActionPerformed(evt);
            }
        });
        infoPanel.add(Logoutbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 500, -1, 20));

        CopyRightLabel.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        CopyRightLabel.setForeground(new java.awt.Color(246, 194, 122));
        CopyRightLabel.setText("Copyright@2024 Skylinker");
        infoPanel.add(CopyRightLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 500, 150, 20));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LoginPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BLogin.setBackground(new java.awt.Color(245, 195, 116));
        BLogin.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        BLogin.setForeground(new java.awt.Color(59, 59, 59));
        BLogin.setText("LOGIN");
        BLogin.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        BLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BLoginActionPerformed(evt);
            }
        });
        LoginPanel.add(BLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 420, 60, 30));

        Jpassword.setBackground(new java.awt.Color(217, 217, 217));
        Jpassword.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(245, 195, 116)));
        LoginPanel.add(Jpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 333, 290, 40));

        LPassword.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        LPassword.setForeground(new java.awt.Color(234, 228, 211));
        LPassword.setText("Password");
        LoginPanel.add(LPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 90, -1));

        UserTxtF.setBackground(new java.awt.Color(217, 217, 217));
        UserTxtF.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(245, 195, 116)));
        LoginPanel.add(UserTxtF, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 290, 40));

        Lusername.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        Lusername.setForeground(new java.awt.Color(234, 228, 211));
        Lusername.setText("Username");
        LoginPanel.add(Lusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 100, -1));

        LableLogin.setBackground(new java.awt.Color(13, 144, 124));
        LableLogin.setFont(new java.awt.Font("Serif", 1, 28)); // NOI18N
        LableLogin.setForeground(new java.awt.Color(234, 228, 211));
        LableLogin.setText("LOGIN");
        LoginPanel.add(LableLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 100, 40));

        CshowPassword.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        CshowPassword.setForeground(new java.awt.Color(234, 228, 211));
        CshowPassword.setText("Show Password");
        CshowPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CshowPasswordActionPerformed(evt);
            }
        });
        LoginPanel.add(CshowPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 390, 110, -1));

        LAirplane.setBackground(new java.awt.Color(255, 204, 204));
        LAirplane.setFont(new java.awt.Font("Garamond", 1, 16)); // NOI18N
        LAirplane.setForeground(new java.awt.Color(245, 195, 116));
        LAirplane.setText("Airport Management System");
        LoginPanel.add(LAirplane, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 500, 200, -1));

        Lmain.setBackground(new java.awt.Color(110, 85, 73));
        Lmain.setFont(new java.awt.Font("Garamond", 1, 46)); // NOI18N
        Lmain.setForeground(new java.awt.Color(245, 195, 116));
        Lmain.setText("Welcome To Skylinker");
        LoginPanel.add(Lmain, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 460, -1));

        LErrormsg.setForeground(new java.awt.Color(245, 195, 116));
        LoginPanel.add(LErrormsg, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, 290, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/airport/resource/final 2.png"))); // NOI18N
        LoginPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 530));

        jLabel5.setText("jLabel5");
        LoginPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 160, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LoginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LoginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   private void initializeLayout() {
// Setting the layout of the content pane to CardLayout, which allows f
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

// Adding panels with unique identifiers
        getContentPane().add(LoginPanel, "LoginScreen");
        getContentPane().add(infoPanel, "MainScreen");

    }

    private void LoginPanel(String panelName) {// method to swicth between pane
        cardLayout.show(getContentPane(), panelName);
    }

    /**
     * Handles the login button action. Validates the user's email and password
     * and loads the main screen if credentials are correct.
     *
     * @param evt the action event triggered by the login button
     */
    private void BLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BLoginActionPerformed
        // TODO add your handling code here:
        // Get the username and password input
        String email = UserTxtF.getText();
        String password = new String(Jpassword.getPassword());

        if (email.isEmpty() || password.isEmpty()) {
            LErrormsg.setText("Please enter your username and password.");
        } else if (!email.equals("Skylinker") || !password.equals("linker123")) {
            JOptionPane.showMessageDialog(LoginPanel, "Username or password does not match.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            LErrormsg.setText("");
            LoginPanel("MainScreen");
        }
    }

    private void initializeData() {
        schedule = new ArrayList();
        //adding flights to the schedule
        registerFlight(new SkylinkerModel(178, "Kathmandu-Pokhara", "12:00PM", "1:00PM", "Sunday"));
        registerFlight(new SkylinkerModel(208, "Itahari-Kathmandu", "4:00PM", "4:45PM", "Tuesday"));
        registerFlight(new SkylinkerModel(450, "Bhairawa-Kathmandu", "10:00AM", "11:00AM", "Monday"));
        registerFlight(new SkylinkerModel(120, "Kathmandu-Butwal", "1:00PM", "2:00PM", "Friday"));
        registerFlight(new SkylinkerModel(320, "Dang-Kathmandu", "7:00AM", "8:15AM", "Thursday"));

    }

    /**
     * Registers a new flight and adds it to the schedule and the flight table.
     *
     * @param flight the SkylinkerModel object containing flight details to be
     * registered
     */
    private void registerFlight(SkylinkerModel flight) {
        schedule.add(flight);
        DefaultTableModel model = (DefaultTableModel) Flighttable.getModel();
        model.addRow(new Object[]{
            flight.getFlightNo(), flight.getSector(), flight.getDeparture(), flight.getArival(), flight.getOperationDay()
        });
    }

    /**
     * Populates the flight table with the current schedule. Clears existing
     * rows and re-adds all flights from the schedule list.
     */
    private void FlightTable() {
        DefaultTableModel model = (DefaultTableModel) Flighttable.getModel();
        model.setRowCount(0); // Clear existing rows

        schedule.forEach(flight -> {
            model.addRow(new Object[]{
                flight.getFlightNo(),
                flight.getSector(),
                flight.getDeparture(),
                flight.getArival(),
                flight.getOperationDay()
            });
        });
    }

    private void clearTextfields() {//clear each text field 
        txtFlight.setText("");
        txtSector.setText("");
        txtDeparture.setText("");
        txtArival.setText("");
        txtOperation.setText("");


    }//GEN-LAST:event_BLoginActionPerformed

    private void CshowPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CshowPasswordActionPerformed
        // TODO add your handling code here:
        if (CshowPassword.isSelected()) {
            Jpassword.setEchoChar((char) 0); // For Showing password
        } else {
            Jpassword.setEchoChar('*'); // For Hiding password
        }
    }//GEN-LAST:event_CshowPasswordActionPerformed

    private void ContactButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContactButtonActionPerformed
        // TODO add your handling code here:
        jTabbedp.setSelectedIndex(3);
    }//GEN-LAST:event_ContactButtonActionPerformed

    private void AboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutButtonActionPerformed
        // TODO add your handling code here:
        jTabbedp.setSelectedIndex(2);
    }//GEN-LAST:event_AboutButtonActionPerformed

    private void AdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminButtonActionPerformed
        // TODO add your handling code here:
        jTabbedp.setSelectedIndex(1);
    }//GEN-LAST:event_AdminButtonActionPerformed

    private void FlightDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FlightDetailButtonActionPerformed
        // TODO add your handling code here:
        jTabbedp.setSelectedIndex(0);
    }//GEN-LAST:event_FlightDetailButtonActionPerformed

    private void LogoutbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutbuttonActionPerformed
        // TODO add your handling code here:
        infoPanel.setVisible(false); //hides infopanel screen
        UserTxtF.setText("");
        Jpassword.setText("");

        // Shows a message to inform the user that they have logged out 
        JOptionPane.showMessageDialog(this, "You have successfully logged out.", "Logout", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_LogoutbuttonActionPerformed
    /**
     * Handles the login button action. Validates the user's email and password
     * and loads the main screen if credentials are correct.
     *
     * @param evt the action event triggered by the login button
     */
    private void AddbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddbuttonActionPerformed
        // TODO add your handling code here:

        int flightNo;
        String operationDay = txtOperation.getText();
        String sector = txtSector.getText();
        String departure = txtDeparture.getText();
        String arival = txtArival.getText();

        // Checks if any fields are empty
        if (txtFlight.getText().isEmpty() || operationDay.isEmpty() || sector.isEmpty() || departure.isEmpty() || arival.isEmpty()) {
            JOptionPane.showMessageDialog(AdminPnl, "Please enter all details of the flight.", "Information", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                flightNo = Integer.parseInt(txtFlight.getText()); // Directly parse FlightNo as integer

                if (!ValidationUtil.validateFlightNo(String.valueOf(flightNo))) {
                    JOptionPane.showMessageDialog(AdminPnl, "Flight number should contain only digits.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                    return; // Exit if validation fails
                }
                // Validating Sector
                if (!ValidationUtil.validateSector(sector)) {
                    JOptionPane.showMessageDialog(AdminPnl, "Sector should contain only letters.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                // Validating Operation Day
                if (!ValidationUtil.validateOperationDay(operationDay)) {
                    JOptionPane.showMessageDialog(AdminPnl, "Operation day should contain only letters and must be less than 10 characters.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                // Validating Departure Time
                if (!ValidationUtil.validateDeparture(departure)) {
                    JOptionPane.showMessageDialog(AdminPnl, "Departure should be in HH:mm a format (e.g 1:00 PM).", "Validation Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                // Validating Arival Time
                if (!ValidationUtil.validateArival(arival)) {
                    JOptionPane.showMessageDialog(AdminPnl, "Arival should be in HH:mm a format (e.g 1:00 PM).", "Validation Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                // Checks if flight already exists
                boolean flightExists = false;
                for (SkylinkerModel flight : schedule) {
                    if (flight.getFlightNo() == flightNo || flight.getSector().equalsIgnoreCase(sector)) {
                        flightExists = true;
                        break;
                    }
                }
                // Display popup if flight already exists
                if (flightExists) {
                    JOptionPane.showMessageDialog(AdminPnl, "The Flight details already exist.", "Warning", JOptionPane.WARNING_MESSAGE);
                } else {
                    SkylinkerModel flight = new SkylinkerModel(flightNo, sector, departure, arival, operationDay);
                    registerFlight(flight);
                    // Success message
                    JOptionPane.showMessageDialog(AdminPnl, "Flight added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (NumberFormatException n) {
                JOptionPane.showMessageDialog(AdminPnl, "Invalid input. Flight number must be a valid integer.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_AddbuttonActionPerformed
    /**
     * Handles the action for deleting a flight. Prompts the user for a flight
     * number and removes the corresponding flight from the schedule if it
     * exists.
     *
     * @param evt the action event triggered by the delete button
     */
    private void DeletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletebuttonActionPerformed
        // TODO add your handling code here:
        try {
            // Input dialog for Flight No
            String flightNo = JOptionPane.showInputDialog(AdminPnl, "Enter Flight No to delete:");
            // Validate Flight No (ensure it is not null, empty, or invalid)
            if (ValidationUtil.isNullOrEmpty(flightNo)) {
                JOptionPane.showMessageDialog(AdminPnl, "Flight No cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (!ValidationUtil.validateFlightNo(flightNo)) {
                JOptionPane.showMessageDialog(AdminPnl, "Flight No must contain only digits.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int deleteFlightNo = Integer.parseInt(flightNo);

            // checks if the flight exists
            boolean flightFound = false;

            // Loop through the schedule list to find the flight with the given Flight No
            for (int i = 0; i < schedule.size(); i++) {
                SkylinkerModel flight = schedule.get(i);
                // Check if the Flight No matches
                if (flight.getFlightNo() == deleteFlightNo) {
                    // Removes the flight from the schedule list
                    schedule.remove(i);

                    // Updates the table
                    DefaultTableModel model = (DefaultTableModel) Flighttable.getModel();
                    model.removeRow(i); // Removing the row from the table

                    JOptionPane.showMessageDialog(AdminPnl, "Flight deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    flightFound = true; // Marks flight as found
                    break;
                }
            }
            // If the flight is not found shows an error message
            if (!flightFound) {
                JOptionPane.showMessageDialog(AdminPnl, "No flight found with the given Flight No.", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            // Handle invalid input (non-numeric or cancel clicked in input dialog)
            JOptionPane.showMessageDialog(AdminPnl, "Invalid Flight No. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(AdminPnl, "An error occurred while deleting the flight.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DeletebuttonActionPerformed
    /**
     * Handles the update button click event to update flight details.
     *
     * @param evt ActionEvent triggered when the update button is clicked.
     */
    private void UpdatebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatebuttonActionPerformed
        // TODO add your handling code here:
        int flightNo;
        try {
            flightNo = Integer.parseInt(txtFlight.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(AdminPnl, "Please give flight no", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validate the Flight No
        try {
            String Sector = txtSector.getText();
            String Departure = txtDeparture.getText();
            String Arival = txtArival.getText();
            String OperationDay = txtOperation.getText();

            // Validates the inputs
            if (Sector.isEmpty() || Departure.isEmpty() || Arival.isEmpty() || OperationDay.isEmpty()) {
                JOptionPane.showMessageDialog(AdminPnl, "Please enter all flight details.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (!ValidationUtil.validateSector(Sector)) {// validating sector
                JOptionPane.showMessageDialog(AdminPnl, "Sector must contain only letters.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!ValidationUtil.validateDeparture(Departure)) {// validating departure
                JOptionPane.showMessageDialog(AdminPnl, "Departure time must be in HH:mm a format (e.g 1:00 PM).", "Validation Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!ValidationUtil.validateArival(Arival)) {// validating arival
                JOptionPane.showMessageDialog(AdminPnl, "Arrival time must be in HH:mm a format (e.g 1:00 PM).", "Validation Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!ValidationUtil.validateOperationDay(OperationDay)) {// validating operation day
                JOptionPane.showMessageDialog(AdminPnl, "Operation Day must contain only letters and be up to 10 characters.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            boolean flightFound = false;

            // Iterate through the schedule to find the flight
            for (int i = 0; i < schedule.size(); i++) {
                SkylinkerModel flight = schedule.get(i);

                // Checks if the flight number matches
                if (flight.getFlightNo() == flightNo) {
                    //updates the flight details if found
                    flight.setSector(Sector);
                    flight.setDeparture(Departure);
                    flight.setArival(Arival);
                    flight.setOperationDay(OperationDay);

                    // Update the table
                    DefaultTableModel model = (DefaultTableModel) Flighttable.getModel();
                    model.setValueAt(Sector, i, 1);
                    model.setValueAt(Departure, i, 2);
                    model.setValueAt(Arival, i, 3);
                    model.setValueAt(OperationDay, i, 4);

                    flightFound = true;
                    JOptionPane.showMessageDialog(AdminPnl, "Flight details updated successfully!", "Update Success", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
            }

            // If flight is not found error message is shown
            if (!flightFound) {
                JOptionPane.showMessageDialog(AdminPnl, "No flight found with the given Flight No.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(AdminPnl, "An error occurred while updating the flight details.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_UpdatebuttonActionPerformed

    private void HomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeButtonActionPerformed
        // TODO add your handling code here:
        jTabbedp.setSelectedIndex(4);
    }//GEN-LAST:event_HomeButtonActionPerformed
    /**
     * Loads the flight details into the table.
     *
     * @param list ArrayList of SkylinkerModel objects representing flight
     * details.
     * @param table JTable where the flight details are displayed.
     */
    private void loadToTable(ArrayList<SkylinkerModel> list, javax.swing.JTable table) {
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) table.getModel();

        model.setRowCount(0); // Clears existing rows

        for (SkylinkerModel flight : list) {
            Object[] row = new Object[]{
                flight.getFlightNo(),
                flight.getSector(),
                flight.getDeparture(),
                flight.getArival(),
                flight.getOperationDay()
            };
            model.addRow(row);
        }
    }
    private void SortComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortComboboxActionPerformed
        /**
         * Handles the sort combo box selection event to sort the flight list.
         *
         * @param evt ActionEvent triggered when a sort option is selected.
         */
        SelectionSort sort = new SelectionSort();
        InsertionSort insertionSort = new InsertionSort();
        String selected = (String) SortCombobox.getSelectedItem();
        MergeSort mergeSort = new MergeSort();

        if ("Sector(A-Z)".equals(selected)) {
            ArrayList<SkylinkerModel> sortedList = sort.sortBySector(schedule, true);
            loadToTable(sortedList, Flighttable);
        } else if ("Sector(Z-A)".equals(selected)) {
            ArrayList<SkylinkerModel> sortedList = sort.sortBySector(schedule, false);
            loadToTable(sortedList, Flighttable);
        } else if ("Operation Day(A-Z)".equals(selected)) {
            ArrayList<SkylinkerModel> sortedList = insertionSort.sortByOperationDay(schedule, true);
            loadToTable(sortedList, Flighttable);
        } else if ("Operation Day(Z-A)".equals(selected)) {
            ArrayList<SkylinkerModel> sortedList = insertionSort.sortByOperationDay(schedule, false);
            loadToTable(sortedList, Flighttable);
        } else if ("Flight No from ascending".equals(selected)) {
            mergeSort.ExecuteMergeSortFlightNoAscending(schedule, 0, schedule.size() - 1);
            loadToTable(schedule, Flighttable);
        } else if ("Flight No from descending".equals(selected)) {
            mergeSort.ExecuteMergeSortFlightNoDescending(schedule, 0, schedule.size() - 1);
            loadToTable(schedule, Flighttable);
        }

    }//GEN-LAST:event_SortComboboxActionPerformed
    /**
     * Handles the mouse click event for the search icon. Searches for a flight
     * by its flight number using binary search and displays its details if
     * found.
     *
     * @param evt the mouse event triggered by clicking the search icon
     */
    private void searchIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchIconMouseClicked
        // TODO add your handling code here:
        try {
            // Ensure the flight schedule is sorted by flight number in ascending order
            MergeSort mergeSort = new MergeSort();
            mergeSort.ExecuteMergeSortFlightNoAscending(schedule, 0, schedule.size() - 1);

            // Create an instance of BinarySearch
            BinarySearch search = new BinarySearch();

            // Parse the flight number from the search text field
            int flightNumber = Integer.parseInt(SearchTxt.getText().trim());

            // Perform a binary search for the flight number
            SkylinkerModel searchedModel = search.searchByFlightNo(flightNumber, schedule, 0, schedule.size() - 1);

            // If a flight is found, display its details in a dialog box
            if (searchedModel != null) {
                JOptionPane.showMessageDialog(AdminPnl,
                        "Flight Number: " + searchedModel.getFlightNo() + "\n"
                        + "Sector: " + searchedModel.getSector() + "\n"
                        + "Operation Day: " + searchedModel.getOperationDay() + "\n"
                        + "Departure Time: " + searchedModel.getDeparture() + "\n"
                        + "Arrival Time: " + searchedModel.getArival(),
                        "Flight Details",
                        JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Display an error message if the flight is not found
                JOptionPane.showMessageDialog(AdminPnl,
                        "Flight not found.",
                        "Search Error",
                        JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            // Handle invalid flight number input
            JOptionPane.showMessageDialog(AdminPnl,
                    "Please enter a valid numeric flight number.",
                    "Input Error",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            // Handle unexpected errors
            JOptionPane.showMessageDialog(AdminPnl,
                    "An unexpected error occurred: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchIconMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AirportInformationSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AirportInformationSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AirportInformationSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AirportInformationSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AirportInformationSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AboutButton;
    private javax.swing.JPanel AboutUsPanel;
    private javax.swing.JLabel AboutusLabel;
    private javax.swing.JButton Addbutton;
    private javax.swing.JButton AdminButton;
    private javax.swing.JPanel AdminControl;
    private javax.swing.JPanel AdminPnl;
    private javax.swing.JPanel AirbusPanel;
    private javax.swing.JLabel AirbusPiclabel;
    private javax.swing.JButton BLogin;
    private javax.swing.JLabel Boeing1;
    private javax.swing.JLabel Boeing2;
    private javax.swing.JLabel Boeing3;
    private javax.swing.JLabel Boeing4;
    private javax.swing.JLabel Boeing5;
    private javax.swing.JPanel BoeingPanel;
    private javax.swing.JLabel BoeingPicLable;
    private javax.swing.JLabel Contact1;
    private javax.swing.JLabel Contact10;
    private javax.swing.JLabel Contact2;
    private javax.swing.JLabel Contact3;
    private javax.swing.JLabel Contact4;
    private javax.swing.JLabel Contact5;
    private javax.swing.JLabel Contact6;
    private javax.swing.JLabel Contact7;
    private javax.swing.JLabel Contact8;
    private javax.swing.JLabel Contact9;
    private javax.swing.JButton ContactButton;
    private javax.swing.JPanel ContactUsPanel;
    private javax.swing.JLabel CopyRightLabel;
    private javax.swing.JCheckBox CshowPassword;
    private javax.swing.JButton Deletebutton;
    private javax.swing.JButton FlightDetailButton;
    private javax.swing.JLabel FlightLable;
    private javax.swing.JScrollPane Flightscrollpane;
    private javax.swing.JTable Flighttable;
    private javax.swing.JPanel HeadOfficePanel;
    private javax.swing.JLabel Home1;
    private javax.swing.JLabel Home2;
    private javax.swing.JLabel Home3;
    private javax.swing.JLabel Home4;
    private javax.swing.JButton HomeButton;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JLabel JlableArival;
    private javax.swing.JLabel JlableDeparture;
    private javax.swing.JLabel JlableFlight;
    private javax.swing.JLabel JlableOperation;
    private javax.swing.JLabel JlableSector;
    private javax.swing.JPasswordField Jpassword;
    private javax.swing.JLabel LAirplane;
    private javax.swing.JLabel LErrormsg;
    private javax.swing.JLabel LPassword;
    private javax.swing.JLabel LableLogin;
    private javax.swing.JPanel Leftpanel;
    private javax.swing.JLabel Lmain;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JButton Logoutbutton;
    private javax.swing.JLabel Lusername;
    private javax.swing.JPanel MainFlightPanel;
    private javax.swing.JLabel PicLabel;
    private javax.swing.JPanel SchedulePanel;
    private javax.swing.JTextField SearchTxt;
    private javax.swing.JComboBox<String> SortCombobox;
    private javax.swing.JPanel TopPanel;
    private javax.swing.JLabel TopTxt;
    private javax.swing.JButton Updatebutton;
    private javax.swing.JTextField UserTxtF;
    private javax.swing.JLabel airbus2;
    private javax.swing.JLabel airbus3;
    private javax.swing.JLabel airbus4;
    private javax.swing.JLabel airbus5;
    private javax.swing.JLabel airbus6;
    private javax.swing.JLabel airbuslabel;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedp;
    private javax.swing.JLabel searchIcon;
    private javax.swing.JTextField txtArival;
    private javax.swing.JTextField txtDeparture;
    private javax.swing.JTextField txtFlight;
    private javax.swing.JTextField txtOperation;
    private javax.swing.JTextField txtSector;
    // End of variables declaration//GEN-END:variables
}